@model IEnumerable<web.Models.ViewCOSEMAttributeDataType>

@{
	ViewBag.Title = "Attributes defined for object \"" + ViewBag.COSEMObjectName + "\" of \"" + ViewBag.DeviceTypeName + "\"";
	Layout = "~/Views/Shared/_LayoutModeling.cshtml";

	var grid = new WebGrid(Model,
						   defaultSort: "Name",
						   rowsPerPage: 20); 
}

<h2>Attributes defined for object "@Html.Raw(ViewBag.COSEMObjectName)" of "@Html.Raw(ViewBag.DeviceTypeName)"</h2>

<p>
	@Html.ActionLink("Objects", (String)("Index/" + ViewBag.LogicalDeviceID.ToString()))
</p>

<div class="webgrid-wrapper">
	<div class="webgrid-title"></div>
	<div id="grid">
		@if (Roles.IsUserInRole(User.Identity.Name, "Administrator") || !((Boolean)ViewBag.COSEMObjectStandard))
		{
			@grid.GetHtml(
				tableStyle: "grid",
				headerStyle: "head",
				alternatingRowStyle: "alt",
				footerStyle: "footer",
				columns: grid.Columns(
					grid.Column("Name", "Attribute", style: "product"),
					grid.Column("COSEMDataTypeName", "Data Type", style: "product"),
					grid.Column("MinValue", "Min. Value", style: "product"),
					grid.Column("MaxValue", "Max. Value", style: "product"),
					grid.Column("DefValue", "Def. Value", style: "product"),
					grid.Column("Dynamic", "Dynamic", 
					@<text>
					@if (null == item.Dynamic || !item.Dynamic)
					{
						<span class="ui-icon ui-state-highlight ui-icon-closethick" title="Static"></span>
					}
					else
					{
						<span class="ui-icon ui-state-highlight ui-icon-check" title="Dynamic"></span>
					}
					</text>, style: "product"),
					grid.Column("Identifier", "Identifier", style: "product"),
					grid.Column("AttributeID", "", @<text>@Html.ActionLink("Assign identifier", "AssignIdentifier", new { id = item.AttributeID, objectid = (long)ViewBag.COSEMObjectID })</text>, style: "product", canSort: false)
				),
				numericLinksCount: 20
			)
		}
		else
		{ 
			@grid.GetHtml(
				tableStyle: "grid",
				headerStyle: "head",
				alternatingRowStyle: "alt",
				footerStyle: "footer",
				columns: grid.Columns(
					grid.Column("Name", "Attribute", style: "product"),
					grid.Column("COSEMDataTypeName", "Data Type", style: "product"),
					grid.Column("MinValue", "Min. Value", style: "product"),
					grid.Column("MaxValue", "Max. Value", style: "product"),
					grid.Column("DefValue", "Def. Value", style: "product"),
					grid.Column("Dynamic", "Dynamic",
					@<text>
					@if (null == item.Dynamic || !item.Dynamic)
					{
						<span class="ui-icon ui-state-highlight ui-icon-closethick" title="Static"></span>
					}
					else
					{
						<span class="ui-icon ui-state-highlight ui-icon-check" title="Dynamic"></span>
					}
					</text>, style: "product"),
					grid.Column("Identifier", "Identifier", style: "product")
				),
				numericLinksCount: 20
			)
		}
	</div>
</div>
